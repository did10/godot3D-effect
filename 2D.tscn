[gd_scene load_steps=8 format=2]

[ext_resource path="res://test-tex.png" type="Texture" id=1]
[ext_resource path="res://3DDistortionShader.shader" type="Shader" id=2]

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;


void fragment(){
	vec2 pos = vec2(UV);

	float x_centered = cos((SCREEN_UV.x - 0.5)*2.0);

	COLOR = texture(TEXTURE, UV);
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )

[sub_resource type="ShaderMaterial" id=6]
shader = ExtResource( 2 )

[sub_resource type="ViewportTexture" id=1]
viewport_path = NodePath("Viewport")

[sub_resource type="GDScript" id=2]
script/source = "extends Sprite

export(NodePath) var targetCam

var mouse_sens = 3.3
var camera_anglev=0
onready var cam = get_node(targetCam)

func _input(event):
	if event is InputEventMouseMotion:
		cam.translate(Vector2(-event.relative.x*mouse_sens,0))
		Input.set_mouse_mode(Input.MOUSE_MODE_HIDDEN)
"

[node name="Node2D" type="Node2D"]

[node name="StaticCamera" type="Camera2D" parent="."]
position = Vector2( 511.814, 296.565 )
current = true

[node name="Viewport" type="Viewport" parent="."]
size = Vector2( 1920, 1080 )
disable_3d = true
usage = 0
render_target_v_flip = true

[node name="MovingCamera" type="Camera2D" parent="Viewport"]
position = Vector2( 513.269, 301.267 )
current = true

[node name="RoomTexture" type="Sprite" parent="Viewport"]
material = SubResource( 4 )
position = Vector2( 502.041, 301.573 )
scale = Vector2( 3, 3 )
texture = ExtResource( 1 )

[node name="ViewportSprite" type="Sprite" parent="."]
material = SubResource( 6 )
position = Vector2( 513.489, 299.914 )
texture = SubResource( 1 )
script = SubResource( 2 )
targetCam = NodePath("../Viewport/MovingCamera")
